# Copyright (c) Dávid Márk Nemeskey

DELIMITERS = "<.>" "<!>" "<?>" "<;>" "<...>" (sent);

#SETS

# Articles
LIST Art    = det ;
LIST DefArt = (det def) ;
LIST IndArt = (det ind) ;
# Demonstratives -- these can also appear in predet position
LIST Dem    = "az" "ez" "amaz" "emez" ;
LIST Noun = n np ;
LIST Verb = vblex vbser vbmod ;
LIST VerbNotSer = vblex vbmod ;
LIST Punct = cm sent quot ;  # guio, apos?
LIST Poss = px1ss px2ss px3ss px1ps px2ps px3ps px1sp px2sp px3sp px1pp px2pp px3pp ;
LIST VbSer = "van" "lehet" "volt" "nincs" ;
LIST PastAdv = "tegnap" "múltkor" "régen" ;
# Words that are <post>, but can be members of another closed class, e.g. <prevb>
LIST PostFirst = "alá" ;
# Parts of an NP (other than the noun)
LIST NpPart = det num adv adj ;
LIST NpPartFromAdj = adv adj ;
# Conjunctions that may occur in NPs
LIST NpConj = "és" "vagy" cm ;
# Conjunctions, might be the same as the previous one?
LIST Conj   = "és" "vagy" cm ;
# Verbs that can take an infinite verb as argument
LIST MetaVerb = "akar" "szeret" "imád" ;
LIST Anp = pxs pxp ;
#LIST >>> = ">>>" ;
#LIST <<< = "<<<" ;
## TODO: add (*) to fomacg, and uncomment rules starting with 6 #'s

CONSTRAINTS

############
# az       #
############

# Before an ADJ or NOUN, "az" is a <det>
#SELECT (det) IF (0 ("az") LINK 1 (adj) OR (n))
"<az>" SELECT (det) IF (1 (adj) OR (n));
"<Az>" SELECT (det) IF (1 (adj) OR (n));

# "akkor" is <prn>, if it is together with a past-tense verb, and there is no
# PastAdv immediately before or after it
SELECT ("az" prn tem) IF (*1 Verb + (past) BARRIER Verb) (NOT 1 PastAdv) (NOT -1 PastAdv);


# "ekkor" is a <prn><tem>, if a verb follows it (not necessarily past tense --
# that's a difference to "akkor")
SELECT ("ez" prn tem) IF (1C VerbNotSer);

# Before a definete article, demonstratives are <predet>; they cannot be that
# before an indefinite article (or any other word? So can I use IFF?)
SELECT (predet) IF (0 Dem LINK 1C DefArt);
#SELECT (predet) IF (0 Dem) (1C DefArt)
#SELECT (predet) + Dem IF (1C DefArt)
#REMOVE (predet) + Dem IF (1C IndArt)
###IFF (predet) + Dem IF (1C DefArt);

################
# Collocations #
################

SELECT ("válasz" n acc) IF (*1 ("kap") + VerbNotSer BARRIER Verb);
SELECT ("válasz" n acc) IF (*-1 ("kap") + VerbNotSer BARRIER Verb);

############
# NP-stuff #
############

# Disambiguate the <det> at the beginning of an NP (<np> too?)
#SELECT (det) IF (*1 NOUN BARRIER (*) - AdjOrNum)
######SELECT (det) IF (*1 Noun BARRIER (*) - (adj) - (num));

## Non-proper nouns need a <det> before them, except if they are a possession
## (e.g. János és kutyája)
#REMOVE (n) IF (NOT 0 Poss) (NOT -1* Art BARRIER (*) - (adj) - (num) - (adv))
# No, they don't -- see e.g. választ kap (collocation), "kutyába se vesz" (idiom), etc.

# No <adv> before <n>. NOT CORRECT. (e.g. before N V constructs)
REMOVE (n) IF (-1C (adv));

# If a noun is written with capital letters and it is not at the start of the
# sentence, it is an np.
SELECT (np) IF (NOT -1 (>>>));

# <plfam> cannot stand with "egy"
######REMOVE (plfam) IF (*-1 IndArt BARRIER (*) - (adj) - (num) - (adv));

# Note: the rules from this point are based on the rules of the Hungarian NP
# grammar. Unfortunately, there are some points, where different analyses are
# possible (e.g. can an inflected <adj> + a zero <n> be the head of an NP?).
# The rules here are based on my decision on how NPs look like.

# <adj>s cannot take <pxNPP>. Examples such as "(tojás)fehérje" do not refer
# to the property of the noun, but rather, to one of its parts.
REMOVE (adj) + Poss IF (0 Noun + Poss);

# The head of an NP is a noun. There can only be one noun in an NP, except:
# - <np>s
# - possessives (János kutyája)
# - conjunctions (János és Mari)
#REMOVE (n) IF (*1C Noun LINK NOT 0 Poss BARRIER (*) - (num) - (adj))
#REMOVE (n) IF (*1C Noun LINK NOT 0 Poss BARRIER (*) - (adj))
#REMOVE (n) IF (*1C Noun BARRIER (*) - (adj) LINK NOT 0 Poss)

# Same, but if there the <det> is <ind>, we also allow <cm> and <cnjcoo>

# Possessions can occur in an NP if
# - it is a proper NP, with <det> and all
# - after another Noun
# TODO cnjcoo, cm?
###REMOVE (n) + Poss IF (NEGATE (*-1 Art BARRIER (*) - NpPart) OR (*-1 Noun BARRIER (*) - NpPart));

# adj/nouns are adjs if they are in the same NP with a noun, which does not have
# a possession marker on it
# TODO Poss?
######REMOVE (n) IF (*1C Noun BARRIER (*) - NpPartFromAdj - NpConj);

# There cannot be regular, non-possessive nouns in an NP
REMOVE (n) IF (-1C Noun) (NOT 0 Poss);

# A bit too specific, but what can you do... Anp + "is" is only valid, if there
# was another possessive construct in the sentence
# TODO: of course, it could be in the previous sentence...
REMOVE (n) + Anp IF (1 ("is")) (NOT *-1C (n) + Anp OR Poss);

# Handle the last noun in a conjunctive NP -- one rule per case...
# Note: could be Noun OR (adj) + (nom) -- but in that case 0 could also be adj; I don't know
# Warning: these rules simply don't work
#####SELECT (n nom) IF (NOT *1 (n) BARRIER (np) OR Art) (*-1 NpConj BARRIER (*) - NpPart LINK -1 Noun + (nom));
#####SELECT (n acc) IF (NOT *1 (n) BARRIER (np) OR Art) (*-1 NpConj BARRIER (*) - NpPart LINK -1 Noun + (acc));

#########
# Verbs #
#########

# Remove the <vblex> analysis of <vbser>s, erroneously added by hunmorph.
REMOVE VbSer + (vblex) + (pres);

# pis is imperative (and also very rare)
REMOVE (pis) IF (NOT *1 ("!"));

# Some adverbs bring past tense with them.
SELECT Verb + (past) IF (*-1 PastAdv BARRIER (cm) OR (cnjcoo) OR Verb + (past));

# Meta-verbs
SELECT MetaVerb IF (*1 Verb + (inf) BARRIER (cm) OR (cnjcoo) OR MetaVerb);

# If sth can be an adjective and an adverb, select the latter if it stands
# before a verb, unless it's <vbser>
SELECT (adv) IF (0 (adj)) (1C VerbNotSer);

# Non-personal pronouns are third person
REMOVE Verb + (s1p) OR (s2p) IF (*-1 (prn nom) - (pers) BARRIER Verb);

#########
# prevb #
#########

# In case of verbs modified by a preverb, hunmorph returns both the
# (underspecified) vblex/ser and the prevb + vblex/ser analysis. Of these, we
# select the latter one.
# Note: this rule is not really sound because of two reasons: first, the word
#       form of a verb with a preverb might be the same as that of a regular
#       verb, though this is rare. Second, this kind of disambiguation is
#       really the morphological analyser's task: hunmorph should not return
#       the underspecified analysis, if it knows better (and it does).
# For sub-readings, see http://beta.visl.sdu.dk/cg3/chunked/subreadings.html
#SELECT (prevb) + (vblex) IF (0C Verb LINK 0:1 (prevb))
###SELECT SUB:1 (prevb) IF (0C Verb);

# preverbs cannot occur before a verb (in that case, they must form a compound
# word), except if there is an infinite verb somewhere later in the sentence
# (e.g. el<prevb> akarja<vblex> olvasni<vblex><inf>).
REMOVE (prevb) IF (1C Verb) (NOT *2 Verb + (inf));

########
# post #
########

# <post> can only stand after a noun (or adj)
REMOVE (post) IF (NOT -1C Noun OR (adj));

SELECT (post) IF (0 PostFirst) (-1C Noun);

################
# Conjunctions #
################

# cnjcoo is always at the beginning of the second part, never at the end of the
# first one.
REMOVE (cnjcoo) IF (1 Punct);

# "de" is <adv> only immediately before an <adj> (e.g. de hideg van)
REMOVE ("de" adv) IF (NOT 1C (adj));

# "így" needs a verb to be and adverb (might be valid for other cnjadv/adv's?)
REMOVE ("így" adv) IF (NOT 1C Verb);

# "ha" is cnjcoo unless it is by itself (e.g. "ha!")
SELECT ("ha" cnjcoo) IF (NOT 1 (sent));

# Not necessarily @-1 (e.g. ?!)
REMOVE ("<mikor>" itg) IF (NOT *1 ("?"));

#########
#  nem  #
#########

# "nem" is always adv before a verb. (TODO: but after another ij?)
###IFF ("nem" adv) IF (1C Verb OR (<adj>) OR Noun);

######
# cm #
######

# e.g. Jancsit és Marit. All cases should be listed here, except for nom,
# because that's the default, and it does not capture the head.
# TODO: do the same for the right side
# TODO: do the same for NPs
SELECT Noun + (acc) IF (-1 (cnjcoo) LINK -1 Noun + (acc));

#######
# más #
#######

# "más" is a special <adj>/<n>
######SELECT ("más" adj) IF (*1 (n) BARRIER (*) - NpPartFromAdj);

# Verbs that can take "ott" as <prevb>
LIST OttVerb = "marad" ;

CONSTRAINTS

###REMOVE ("ott" prevb) IF (NEGATE (*2 OttVerb BARRIER Conj) OR (-1* OttVerb BARRIER Conj));

# Remove cnjcoo if the word is not at the beginning of a sentence or clause
# "vagy" is an exception, as is "és", but the latter is not ambiguous
REMOVE (cnjcoo) IF (NOT 0 ("vagy")) (NOT -1 (>>>) OR (cm) OR (quot) OR (sent));

###CONSTRAINTS

# Identify preverbs disconnected from their verbs. The candidate verb must
# not be have a prevb attached, must not be vbser and there cannot be another
# verb between.
####SELECT (prevb) IF ((*2 VerbNotSer BARRIER Verb OR (prevb) LINK NOT 0/1 (prevb)) OR (*-1 VerbNotSer BARRIER Verb OR (prevb) LINK NOT 0/1 (prevb)));

# If there is an <acc> word, and no other (potential) verbs in the sentence,
# select the verb reading.
###SELECT VerbNotSer IF ((*1C (acc) BARRIER Conj) OR (*-1C (acc) BARRIER Conj)) ((NOT *-1 VerbNotSer) OR (NOT *1 VerbNotSer));

######
# NP #
######

# <n> requires an article, unless it's Poss
#REMOVE (n) IF (NOT -1* Art OR (np) OR ("nem") BARRIER (*) - NpPart - NpConj)

###########
# Guesser #
###########

LIST DestinationAdv = "hova" "hová" "merre" ;

CONSTRAINTS

# This again -- why doesn't it work now?
###SELECT SUB:1 (prevb) IF (0C Verb);

# "ment": megy+past, if there's a destination
###SELECT ("<ment>"i "megy" past) IF ((*-1 DestinationAdv) OR (*-1 Noun + (ill) OR (all) OR (sub) OR (term)) OR (*-1 Noun + (ill) OR (all) OR (sub) OR (term)));

# "hallik" vs "hall": if there is an object, it's "hall"
###SELECT ("hall" vblex inf) IF ((*1 (acc) BARRIER Verb) OR (*-1 (acc) BARRIER Verb));

# If we have to choose between Anp and Poss, choose Poss
# TODO: why doesn't the condition work?
SELECT Poss - Anp IF (NOT 0 Poss + Anp) (0 Anp); #(0 Anp LINK NOT 0 Poss) (0 Poss LINK NOT 0 Anp);

SELECT ("Mari" np);
SELECT ("kutya" n);
SELECT ("ötéves" adj);
REMOVE ("aztán" adv);  # I think it's not an adv

# it would be "be+fejel", not "be+fej+ez"
# Note: 0/1 doesn't guarantee that it's the same meaning -- welcome to
# subreadings!
###REMOVE ("fej" vblex) IF (0 ("fej" vblex) LINK 0/1 ("be"));

# No such word, unless it's a possessive/ion (even then there's no such word,
# but I use this form to remember the - Anp trick)
REMOVE ("látta" n sg nom) - Anp - Poss;

# Remove the archaic "fő" reading when "fej" is available
REMOVE ("fö") IF (0 ("fej"));

# Remove the familiar form "anyjuk", if it is not preceded by an <ij>
REMOVE ("anyjuk") IF (NOT *-1 (ij) BARRIER (cm));

