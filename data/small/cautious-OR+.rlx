LIST A = a ;
LIST B = b ;
LIST D = d ;
LIST E = e ;
LIST F = f ;
LIST G = g ;

LIST AC = (a c);
LIST BC = (b c);

SET A_or_B = A OR B;
SET AC_or_BC = A_or_B + (c);

SECTION

# There must be nothing else but (a c) or (b c)
# Normalises to [a,c],[b,c]
REMOVE:rm_d_acbc0 D IF (-1C AC_or_BC) ;

REMOVE:rm_e_acbc1 E IF (-1C (A OR B) + (c) ) ; # syntax doesn't work in VISL CG-3

REMOVE:rm_f_acbc2 F IF (-1C AC OR BC) ;

# There must be an unambiguous (a c) or an unambiguous (b c)
REMOVE:rm_e_Cac_OR_Cbc E IF ( (-1C A + (c)) OR (-1C B + (c)) );

# triggers rm_r_Cac_OR_Cbc for next round
REMOVE:rm_a A ;
