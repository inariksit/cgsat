
comment "#" ;
comment "CONSTRAINTS" ;
comment "DELIMITERS" ;

Defs.  Grammar ::= [Def] ;
terminator Def "" ;

SetDef. Def ::= SetDecl ;

Set. SetDecl ::= "LIST" SetName "=" [Tag] ";" ;

SetName.  SetName ::= UIdent ;

-- These definitions are only used in a SetDecl.
Lemma.   Tag1 ::= String ; 
Tag.     Tag1 ::= Id ;
Named.   Tag1 ::= SetName ;
coercions Tag 1 ;

separator nonempty Tag "" ;


RuleDef. Def ::= Rule ;

SelectIf. Rule ::= "SELECT" TagSet "IF" CondSet ";" ;
RemoveIf. Rule ::= "REMOVE" TagSet "IF" CondSet ";" ;
SelectAlways. Rule ::= "SELECT" TagSet ";" ;
RemoveAlways. Rule ::= "REMOVE" TagSet ";" ;
MatchLemma. Rule ::= String Rule ;


C.     CondSet ::= [Cond] ;
_.     CondSet ::= "(" CondSet ")" ; -- allow parentheses surrounding whole condition set

CNotPos.  Cond ::= "NOT" Position TagSet ;
CPos.     Cond ::= Position TagSet ;
CBarrier. Cond ::= Position TagSet Barrier ;
CNotBar.  Cond ::= "NOT" Position TagSet Barrier ;
Link0.    Cond ::= Cond1 Cond ; --force parentheses if no explisit LINK
_.        Cond1 ::= "(" Cond ")" ; 
_.        Cond  ::= Cond1 ;

separator Cond "LINK" ;


TagSet.  TagSet  ::= TagSet1 ;
_.       TagSet1 ::= "(" TagSet ")" ; -- you can add parentheses around any tag set

-- Essentially, tags bound by AND are like one tag.
-- These tags are separated by spaces and enclosed in parentheses.
-- Also you can just parenthesise a single tag randomly.
AND.     Tag1 ::= "(" [Tag] ")" ; 

-- OR 
OR.      TagSet1 ::= Tag "OR" TagSet1 ; 
Diff.    TagSet1 ::= TagSet1 "-" TagSet ;
Cart.    TagSet1 ::= TagSet1 "+" TagSet ;
All.     TagSet1 ::= "(*)" ;
NilT.    TagSet1 ::= Tag ;

Exactly. Position ::= Signed ;
AtLeast. Position ::= "*" Signed ;
_. Position ::= Position "C" ; --We're not interested in the unambiguous

Barrier. Barrier ::= "BARRIER" TagSet ;




token UIdent (upper (letter | digit | '_')*) ;
token Id ((letter | '>' | '<') (upper | letter | digit | '/' | '_' | '>' | '<')*) ;
token Signed ('-'? (digit)+ ('/' (digit)+)* ) ;


{- Fred Karlsson's CG book 1995:

"The constraint file consists of thirteen sections. The following designated expressions must occur in the following form and order, each followed by sets, function declarations, constraints etc. of the appropriate type:
SENTENCE-DELIMITERS
SET-DECLARATIONS 
SYNTACTIC-FUNCTION-DECLARATIONS 
PRINCIPAL-FUNCTION-DECLARATIONS 
TEMPLATES
MORPHOSYNTACTIC-MAPPINGS 
CLAUSE-BOUNDARY-CONSTRAINTS 
DISAMBIGUATION-CONSTRAINTS 
HEURISTIC-DISAMBIGUATION-CONSTRAINTS 
SYNTACTIC-CONSTRAINTS 
HEURISTIC-SYNTACTIC-CONSTRAINTS 
MORPHOLOGICAL-HEURISTICS 
TEXT-BASED-HEURISTICS
END"
-}